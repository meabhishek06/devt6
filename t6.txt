job("job1"){
        
        scm {
                 github('meabhishek06/devt6' , 'master')
             }
        triggers {
                scm("* * * * *")
                
        }

        steps {
        shell('''sudo cp * /var/jenkins_home
sudo scp /var/jenkins_home/* root@192.168.99.106:/devt6
if sudo ls  /var/jenkins_home/ | grep .html
	then
	if sudo ssh root@192.168.99.106 kubectl get deploy | grep html
		then
		echo "already running"
		else
		sudo ssh root@192.168.99.106 kubectl create -f /devt6/html.yml
	fi
fi
if sudo ls  /var/jenkins_home/ | grep .php
	then
	if sudo ssh root@192.168.99.106 kubectl get deploy | grep php
		then
		echo "already running"
		else
		sudo ssh root@192.168.99.106 kubectl create -f /devt6/php.yml
fi 	
fi

sleep 20
''')
      }
}


job("job2"){
        
        triggers {
        upstream {
    upstreamProjects("job1")
    threshold("Fail")
        }
        }

        steps {
        shell('''if sudo ls  /var/jenkins_home/ | grep .html
then
sudo ssh root@192.168.99.106 kubectl cp /devt3/*.html html-app-76744d58b7-kjjd6:/var/www/html/index.html 
fi
if  sudo ls  /var/jenkins_home/ | grep .php
then
sudo ssh root@192.168.99.106 kubectl cp /devt3/*.php html-app-76744d58b7-kjjd6:/var/www/html/index.php 
fi ''')
      }
}


job("job3") {
  
  triggers {
    upstream('job2', 'SUCCESS')
  }
  steps {
    shell('''if sudo ls  /var/jenkins_home/ | grep .html
then
hstatus=$(curl -o /dev/null -s -w "%{http_code}" 192.168.99.100:31000)
 if [[ $hstatus == 200 ]]
  then 
  echo "ALL OK"
  else
  echo "Some Error Occured"
  sudo ssh 192.168.99.106 python3 /devt6/hmailer.py
 fi
fi
if sudo ls  /var/jenkins_home/ | grep .php
then
pstatus=$(curl -o /dev/null -s -w "%{http_code}" 192.168.99.100:32000)
 if [[ $pstatus == 200 ]]
  then 
  echo "ALL OK"
  else
  echo "Some Error Occured"
  sudo ssh 192.168.99.106 python3 /devt6/pmailer.py
 fi
fi''')
  }
  
buildPipelineView('jobs-view') {
  filterBuildQueue(true)
  filterExecutors(false)
  title('jobs-view')
  displayedBuilds(1)
  selectedJob('job1')
  alwaysAllowManualTrigger(false)
  showPipelineParameters(true)
  refreshFrequency(1)
}
}